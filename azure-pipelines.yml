trigger:
- master

pool: k8s-linux

variables:
- name: ImageName
  value: ado-pool-cleaner
- name: ImageTag
  value: "1.0"
- name: AcrName
  value: ataylorregistry

steps:

- task: AzureKeyVault@1
  displayName: 'Download secrets'
  inputs:
    azureSubscription: 'AKS'
    KeyVaultName: 'KSAM'
    SecretsFilter: 'Az-Client-Id,Az-Client-Secret,Az-Tenant-Id,CR-Username,CR-Password'
    RunAsPreJob: false

- task: replacetokens@3
  displayName: 'Replace tokens in Dockerfile'
  inputs:
    targetFiles: '**/Dockerfile'
    encoding: 'auto'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    tokenPrefix: '#{'
    tokenSuffix: '}#'
    useLegacyPattern: false
    enableTelemetry: true
- task: CmdLine@2
  displayName: 'Build image'
  inputs:
    script: |
      docker build -t $(AcrName).azurecr.io/$(ImageName):$(ImageTag) .

- task: AzureCLI@2
  displayName: 'Push image to Azure Container Registry'
  inputs:
    azureSubscription: 'AKS'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      docker login $(AcrName).azurecr.io --username $(CR-Username) --password $(CR-Password)
      docker push $(AcrName).azurecr.io/$(ImageName):$(ImageTag)

- task: replacetokens@3
  displayName: 'Replace tokens in k8s.yaml'
  inputs:
    targetFiles: '**/k8s.yaml'
    encoding: 'auto'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    tokenPrefix: '#{'
    tokenSuffix: '}#'
    useLegacyPattern: false
    enableTelemetry: true

- task: CmdLine@2
  displayName: 'Copy artifact'
  inputs:
    script: |
      cp k8s.yaml $(Pipeline.Workspace)/k8s.yaml

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'artifacts'
    publishLocation: 'pipeline'